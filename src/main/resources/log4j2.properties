status = error   #The level of internal Log4j events that should be logged to the console.
name = PropertiesConfig

filters = threshold

filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

appends = FILE

appender.console.type = File
appender.console.name = FOUT
appender.console.layout.type = PatternLayout
log4j.appender.out=org.apache.log4j.FileAppender
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

rootLogger.level = debug
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT

# initialize root logger with level ERROR for stdout and fout
#
#log4j.rootLogger=ERROR,stdout,fout
## set the log level for these components
#log4j.logger.com.endeca=INFO
#log4j.logger.com.endeca.itl.web.metrics=INFO
#
## add a ConsoleAppender to the logger stdout to write to the console
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
## use a simple message format
#log4j.appender.stdout.layout.ConversionPattern=%m%n
#
## add a FileAppender to the logger fout
#log4j.appender.out=org.apache.log4j.FileAppender
## create a log file
#log4j.appender.out.File=crawl.log
#log4j.appender.out.layout=org.apache.log4j.PatternLayout
## use a more detailed message pattern
#log4j.appender.out.layout.ConversionPattern=%p\t%d{ISO8601}\t%r\t%c\t[%t]\t%m%n

# Root logger option
#log4j.rootLogger=INFO, file
#
## Direct log messages to a log file
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#
##Redirect to Tomcat logs folder
##log4j.appender.file.File=${catalina.home}/logs/logging.log
#
#log4j.appender.file.File=C:\\logging\\logging.log
#log4j.appender.file.MaxFileSize=10MB
#log4j.appender.file.MaxBackupIndex=10
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Set up logging to include a file record of the output
# Note: the file is always created, even if there is
# no actual output.
#log4j.rootLogger=error, stdout, R
#
## Log format to standard out
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=   %5p\t[%d] [%t] (%F:%L)\n     \t%m%n\n
#
## File based log output
#log4j.appender.R=org.apache.log4j.RollingFileAppender
#log4j.appender.R.File=owls_conditions.log
#log4j.appender.R.MaxFileSize=10000KB
## Keep one backup file
#log4j.appender.R.MaxBackupIndex=1
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=   %5p\t[%d] [%t] (%F:%L)\n     \t%m%n\n

#logDir=/var/log/myapp
#
#log4j.rootLogger=INFO, stdout
##log4j.rootLogger=DEBUG, stdout
#
#log4j.appender.stdout=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{MM/dd/yyyy hh:mm:ss a}|%-5p|%-30c{1}| %m%n
#log4j.appender.stdout.DatePattern='.'yyyy-MM-dd
#log4j.appender.stdout.File=${logDir}/myapp.log
#log4j.appender.stdout.append=true